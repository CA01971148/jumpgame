/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/character/character.ts":
/*!************************************!*\
  !*** ./src/character/character.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"character\": () => (/* binding */ character)\n/* harmony export */ });\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../index */ \"./src/index.ts\");\n/* harmony import */ var _scaffold_scaffold__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../scaffold/scaffold */ \"./src/scaffold/scaffold.ts\");\n/* harmony import */ var _scaffold_carryScaffold__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../scaffold/carryScaffold */ \"./src/scaffold/carryScaffold.ts\");\n/* harmony import */ var _scaffold_movingScaffold__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../scaffold/movingScaffold */ \"./src/scaffold/movingScaffold.ts\");\n/* harmony import */ var _other_audio_playAudio__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../other/audio/playAudio */ \"./src/other/audio/playAudio.ts\");\n/* harmony import */ var _other_test__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../other/test */ \"./src/other/test.ts\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar character = /** @class */ (function () {\r\n    function character() {\r\n        this.characterSize = 50; //キャラの大きさ\r\n        this.footSize = 20; //足の広さ\r\n        this._x = 0; //X座標\r\n        this._y = _scaffold_scaffold__WEBPACK_IMPORTED_MODULE_1__.scaffold.firstHeight; //y座標\r\n        this._height = 0; //昇った高さ\r\n        this._dx = 0; //x方向の速度\r\n        this.moveVelocity = 1; //横移動加速量\r\n        this.dxMax = 5; //最大横加速量\r\n        this.deceleration = 0.9; //横移動減速率\r\n        this._dy = 0; //y方向の速度\r\n        this.dyMax = 10; //最大縦加速量\r\n        this._jumpVelocity = 0; //ジャンプ速度\r\n        this.jumpChargeAmount = 0.7; //跳躍力の貯めやすさ\r\n        this.jumpChargeMax = 18; //跳躍力の貯め限界\r\n        this.speedDownMin = 0.1; //跳躍力を貯めている間減速するときの最低速度\r\n        this.fallVelocitiy = 0.5; //落下速度\r\n        this.isOnGround = true; //接地しているかどうか\r\n        this.isCarry = false; //動かされているかどうか\r\n        this.isOnMoving = false; //動く床に乗っているかどうか\r\n        this.heightSize = this.characterSize; //キャラの身長\r\n        this.IDName = \"character\"; //CSSで使うキャラクターのID\r\n        this.imageAddress = \"./../resource/image/character/\";\r\n        this.imageName = \"\";\r\n        this.characterEdges = new Array; //キャラクターが画面端にいるとき、もう片方の画面端にもキャラクターを映すためのクラスを格納するための配列\r\n    }\r\n    Object.defineProperty(character.prototype, \"x\", {\r\n        /* getter/setter */\r\n        get: function () {\r\n            _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character get x()\"] = true;\r\n            return this._x;\r\n        },\r\n        set: function (x) {\r\n            if (x < -_index__WEBPACK_IMPORTED_MODULE_0__.canvas.width / 2) {\r\n                this._x = _index__WEBPACK_IMPORTED_MODULE_0__.canvas.width / 2;\r\n                _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character set x()_左端\"] = true;\r\n            }\r\n            else if (x > _index__WEBPACK_IMPORTED_MODULE_0__.canvas.width / 2) {\r\n                this._x = -_index__WEBPACK_IMPORTED_MODULE_0__.canvas.width / 2;\r\n                _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character set x()_右端\"] = true;\r\n            }\r\n            else {\r\n                this._x = x;\r\n                _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character set x()_通常\"] = true;\r\n            }\r\n            _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character set x()\"] = true;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(character.prototype, \"y\", {\r\n        get: function () {\r\n            _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character get y()\"] = true;\r\n            return this._y;\r\n        },\r\n        set: function (y) {\r\n            this._y = y;\r\n            _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character set y()\"] = true;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(character.prototype, \"height\", {\r\n        get: function () {\r\n            _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character get height()\"] = true;\r\n            return this._height;\r\n        },\r\n        set: function (height) {\r\n            this._height = height;\r\n            _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character set height()\"] = true;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(character.prototype, \"dx\", {\r\n        get: function () {\r\n            _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character get dx()\"] = true;\r\n            return this._dx;\r\n        },\r\n        set: function (dx) {\r\n            if (dx > this.dxMax) {\r\n                this._dx = this.dxMax;\r\n                _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character set dx()_右最大値超過\"] = true;\r\n            }\r\n            else if (dx < -this.dxMax) {\r\n                this._dx = -this.dxMax;\r\n                _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character set dx()_左最大値超過\"] = true;\r\n            }\r\n            else {\r\n                this._dx = dx;\r\n                _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character set dx()_通常\"] = true;\r\n            }\r\n            _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character set dx()\"] = true;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(character.prototype, \"dy\", {\r\n        get: function () {\r\n            _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character get dy()\"] = true;\r\n            return this._dy;\r\n        },\r\n        set: function (dy) {\r\n            this._dy = dy;\r\n            _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character set dy()\"] = true;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(character.prototype, \"jumpVelocity\", {\r\n        get: function () {\r\n            _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character get jumpVelocity()\"] = true;\r\n            return this._jumpVelocity;\r\n        },\r\n        set: function (jumpVelocity) {\r\n            if (jumpVelocity > this.jumpChargeMax) {\r\n                this._jumpVelocity = this.jumpChargeMax;\r\n                _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character set jumpVelocity()_最大値超過\"] = true;\r\n            }\r\n            else {\r\n                this._jumpVelocity = jumpVelocity;\r\n                _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character set jumpVelocity()_通常\"] = true;\r\n            }\r\n            _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character set jumpVelocity()\"] = true;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /* 初期処理 */\r\n    character.prototype.createImgElement = function (_imageName) {\r\n        document.write(\"<img id=\\\"\".concat(this.IDName, \"\\\" src=\\\"\").concat(this.imageAddress).concat(_imageName, \"\\\">\")); //キャラ出現\r\n        _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character createImgElement()\"] = true;\r\n    };\r\n    character.prototype.setImgElement = function () {\r\n        this.characterID = document.getElementById(this.IDName); //IDを取得\r\n        this.characterID.style.width = this.characterSize + \"px\"; //初期大きさ設定(幅)\r\n        this.characterID.style.height = this.characterSize + \"px\"; //初期大きさ設定(高さ)\r\n        _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character setImgElement()\"] = true;\r\n    };\r\n    /* 動作処理 */\r\n    character.prototype.move = function () {\r\n        this.moveX(); //x軸移動\r\n        this.moveY(); //y軸移動\r\n        this.updateImages(); //画像の位置更新\r\n        this.getStates(); //状態更新\r\n        _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character move()\"] = true;\r\n    };\r\n    character.prototype.moveX = function () {\r\n        this.x += this.dx;\r\n        if (this.isOnGround === true) { //減速処理\r\n            if (this.currentScaffold() instanceof _scaffold_carryScaffold__WEBPACK_IMPORTED_MODULE_2__.carryScaffold) { //動かされる足場に運ばれるときの処理\r\n                this.dx = this.movedVelocity(\"carry\");\r\n                _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character moveX()_地上_carry\"] = true;\r\n            }\r\n            else if (this.currentScaffold() instanceof _scaffold_movingScaffold__WEBPACK_IMPORTED_MODULE_3__.movingScaffold) { //動く足場に運ばれるときの処理\r\n                this.dx = this.movedVelocity(\"moving\");\r\n                _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character moveX()_地上_moving\"] = true;\r\n            }\r\n            else { //通常処理\r\n                this.dx *= (1 - this.currentScaffold().friction); //今いる足場の摩擦分滑る\r\n                _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character moveX()_地上_通常\"] = true;\r\n            }\r\n            _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character moveX()_地上\"] = true;\r\n        }\r\n        else {\r\n            this.dx *= this.deceleration; //空中にいるとき、減速する\r\n            _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character moveX()_空中\"] = true;\r\n        }\r\n        _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character moveX()\"] = true;\r\n    };\r\n    character.prototype.moveY = function () {\r\n        if (this.isOnGround === false) { //空中にいるとき、落ちる\r\n            this.dy -= this.fallVelocitiy;\r\n            _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character moveY()_空中\"] = true;\r\n        }\r\n        else if (this.dy < 0) { //地上にいるとき、落ちない\r\n            this.dy = 0;\r\n            _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character moveY()_地上\"] = true;\r\n        }\r\n        if ((this.checkAboveScaffold()) && (this.height + (this.dy) < this.currentScaffold().height)) { //足場の直上にいて、これ以上落ちたら足場を貫通してしまう場合、足場の上に留まる\r\n            this.y = this.currentScaffold().y;\r\n            this.height = this.currentScaffold().height;\r\n            _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character moveY()_足場に留まる\"] = true;\r\n        }\r\n        else {\r\n            this.y += this.dy;\r\n            this.height += this.dy;\r\n            _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character moveY()_足場に留まらない\"] = true;\r\n        }\r\n        _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character moveY()\"] = true;\r\n    };\r\n    character.prototype.updateImages = function () {\r\n        this.characterID.style.left = ((this.x) + (_index__WEBPACK_IMPORTED_MODULE_0__.canvas.width / 2) - (this.characterSize / 2)) + \"px\"; //x座標を更新\r\n        this.characterID.style.top = (_index__WEBPACK_IMPORTED_MODULE_0__.canvas.height - ((this.y + this.heightSize) - _index__WEBPACK_IMPORTED_MODULE_0__.playerCamera.y)) + \"px\"; //y座標を更新\r\n        _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character updateImages()\"] = true;\r\n    };\r\n    character.prototype.getStates = function () {\r\n        /* is～系のboolian型変数を更新するための関数 */\r\n        this.isOnGround = this.checkOnGround(); //接地しているかどうかを判断し、変数に代入\r\n        _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character getStates()\"] = true;\r\n    };\r\n    character.prototype.currentScaffold = function () {\r\n        _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character currentScaffold()\"] = true;\r\n        return _index__WEBPACK_IMPORTED_MODULE_0__.scaffolds[Math.floor(this.height / _scaffold_scaffold__WEBPACK_IMPORTED_MODULE_1__.scaffold.scaffoldDistance)];\r\n    };\r\n    character.prototype.checkAboveScaffold = function () {\r\n        _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character checkAboveScaffold()\"] = true;\r\n        if (((this.x - this.footSize / 2) <= (this.currentScaffold().width / 2 + this.currentScaffold().x)) && ((this.x + this.footSize / 2) >= (-this.currentScaffold().width / 2 + this.currentScaffold().x))) {\r\n            _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character checkAboveScaffold()_足場上\"] = true;\r\n            return true;\r\n        }\r\n        else {\r\n            _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character checkAboveScaffold()_足場外\"] = true;\r\n            return false;\r\n        }\r\n    };\r\n    character.prototype.checkOnGround = function () {\r\n        _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character checkOnGround()\"] = true;\r\n        if ((this.height === this.currentScaffold().height) && (this.checkAboveScaffold()) && (this.dy <= 0)) { //「自分の高さが、今いる区間の足場と同じ」かつ「自分のx座標が、今いる区間の足場の範囲に入っている」かつ「跳んでいる状態ではない」場合\r\n            _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character checkOnGround()_接地\"] = true;\r\n            return true;\r\n        }\r\n        else {\r\n            _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character checkOnGround()_空中\"] = true;\r\n            return false;\r\n        }\r\n    };\r\n    character.prototype.moveLeft = function () {\r\n        if (this.isOnGround === false) {\r\n            this.dx -= this.getSpeed();\r\n            _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character moveLeft()_空中\"] = true;\r\n        }\r\n        this.characterID.style.transform = \"rotateY(0deg)\"; //左を向く\r\n        _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character moveLeft()\"] = true;\r\n    };\r\n    character.prototype.moveRight = function () {\r\n        if (this.isOnGround === false) {\r\n            this.dx += this.getSpeed();\r\n            _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character moveRight()_空中\"] = true;\r\n        }\r\n        this.characterID.style.transform = \"rotateY(180deg)\"; //右を向く\r\n        _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character moveRight()\"] = true;\r\n    };\r\n    character.prototype.getSpeed = function () {\r\n        _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character getSpeed()\"] = true;\r\n        return this.moveVelocity;\r\n        //上の行を下のコメントで置換すると跳躍力を貯めれば貯めるほど減速するようになる\r\n        /*         if(this.jumpVelocity===0){//跳躍力を貯めていなければ減速しない\r\n                    return this.moveVelocity\r\n                }else if((1-(this.jumpVelocity/this.jumpChargeMax))<this.speedDownMin){//最低減速率より減速率が低ければ調整する\r\n                    return this.speedDownMin\r\n                }else{\r\n                    return 1-(this.jumpVelocity/this.jumpChargeMax)\r\n                } */\r\n    };\r\n    character.prototype.jumpCharge = function () {\r\n        this.jumpVelocity += this.jumpChargeAmount; //跳躍力を貯める\r\n        /* 縮む処理 */\r\n        var heightMin = 10;\r\n        var shrunkenSize = this.characterSize * ((this.jumpChargeMax - this.jumpVelocity) / this.jumpChargeMax);\r\n        if (shrunkenSize < heightMin) {\r\n            this.heightSize = heightMin;\r\n            _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character jumpCharge()_最大縮み\"] = true;\r\n        }\r\n        else {\r\n            this.heightSize = shrunkenSize;\r\n            _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character jumpCharge()_通常縮み\"] = true;\r\n        }\r\n        this.characterID.style.height = (this.heightSize) + \"px\"; //ジャンプ前の踏ん張り縮み\r\n        _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character jumpCharge()\"] = true;\r\n    };\r\n    character.prototype.jump = function () {\r\n        this.heightSize = this.characterSize; //縮みを戻す\r\n        this.characterID.style.height = this.characterSize + \"px\"; //踏ん張り縮み解放\r\n        if (this.isOnGround === true) { //接地しているなら、跳躍力を解放\r\n            this.dy += this.jumpVelocity;\r\n            (0,_other_audio_playAudio__WEBPACK_IMPORTED_MODULE_4__.playJumpSE)(\"jump\"); //ジャンプSEを再生\r\n            _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character jump()_接地\"] = true;\r\n        }\r\n        this.jumpVelocity = 0;\r\n        _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character jump()\"] = true;\r\n    };\r\n    character.prototype.movedVelocity = function (type) {\r\n        _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character movedVelocity()\"] = true;\r\n        switch (type) {\r\n            case \"carry\":\r\n                var currentCarryScaffold = this.currentScaffold();\r\n                _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character movedVelocity()_carry\"] = true;\r\n                return currentCarryScaffold.carryVelocity * currentCarryScaffold.direction; //dxを「動かされる速度×向き」に固定する\r\n            case \"moving\":\r\n                var currentMovingScaffold = this.currentScaffold();\r\n                _other_test__WEBPACK_IMPORTED_MODULE_5__.testList[\"character movedVelocity()_moving\"] = true;\r\n                return currentMovingScaffold.moveVelocity * currentMovingScaffold.direction; //dxを「動かされる速度×向き」に固定する\r\n        }\r\n    };\r\n    return character;\r\n}());\r\n\r\n\n\n//# sourceURL=webpack://my-webpack-project/./src/character/character.ts?");

/***/ }),

/***/ "./src/character/characterEdge.ts":
/*!****************************************!*\
  !*** ./src/character/characterEdge.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"characterEdge\": () => (/* binding */ characterEdge)\n/* harmony export */ });\n/* harmony import */ var _character__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./character */ \"./src/character/character.ts\");\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../index */ \"./src/index.ts\");\n/* harmony import */ var _other_test__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../other/test */ \"./src/other/test.ts\");\nvar __extends = (undefined && undefined.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n\r\n\r\n\r\nvar characterEdge = /** @class */ (function (_super) {\r\n    __extends(characterEdge, _super);\r\n    function characterEdge(_imageName, side) {\r\n        var _this = _super.call(this) || this;\r\n        _this.originIDName = _this.IDName; //本体のIDを保存\r\n        _this.IDName += side; //画面端処理用キャラクタークラスのHTML用IDを\"character\"+\"L\"or\"R\"に設定\r\n        _this.imageName = _imageName;\r\n        _this.createImgElement(_this.imageName); //画像を表示\r\n        _this.characterID = document.getElementById(_this.IDName); //img要素を取得\r\n        _this.originID = document.getElementById(_this.originIDName); //本体のimg要素を取得\r\n        _other_test__WEBPACK_IMPORTED_MODULE_2__.testList[\"characterEdge constructor()\"] = true;\r\n        return _this;\r\n    }\r\n    characterEdge.prototype.load = function (direction) {\r\n        this.characterID.style.width = this.originID.style.width; //大きさ設定(幅)\r\n        this.characterID.style.height = this.originID.style.height; //大きさ設定(高さ)\r\n        var standard_x = (_index__WEBPACK_IMPORTED_MODULE_1__.rabbit.x) + (_index__WEBPACK_IMPORTED_MODULE_1__.canvas.width / 2) - (_index__WEBPACK_IMPORTED_MODULE_1__.rabbit.characterSize / 2); //本体のx座標を取得\r\n        this.characterID.style.left = String(standard_x + (direction * _index__WEBPACK_IMPORTED_MODULE_1__.canvas.width)) + \"px\"; //x座標設定\r\n        this.characterID.style.top = this.originID.style.top; //y座標設定\r\n        this.characterID.style.transform = this.originID.style.transform; //向き設定\r\n        _other_test__WEBPACK_IMPORTED_MODULE_2__.testList[\"characterEdge load()\"] = true;\r\n    };\r\n    return characterEdge;\r\n}(_character__WEBPACK_IMPORTED_MODULE_0__.character));\r\n\r\n\n\n//# sourceURL=webpack://my-webpack-project/./src/character/characterEdge.ts?");

/***/ }),

/***/ "./src/character/characterRabbit.ts":
/*!******************************************!*\
  !*** ./src/character/characterRabbit.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"characterRabbit\": () => (/* binding */ characterRabbit)\n/* harmony export */ });\n/* harmony import */ var _character__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./character */ \"./src/character/character.ts\");\n/* harmony import */ var _characterEdge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./characterEdge */ \"./src/character/characterEdge.ts\");\n/* harmony import */ var _other_test__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../other/test */ \"./src/other/test.ts\");\nvar __extends = (undefined && undefined.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n\r\n\r\n\r\nvar characterRabbit = /** @class */ (function (_super) {\r\n    __extends(characterRabbit, _super);\r\n    function characterRabbit() {\r\n        var _this = _super.call(this) || this;\r\n        _this.imageName = \"rabbit.png\";\r\n        _this.createImgElement(_this.imageName); //キャラクターのimg要素を追加する\r\n        _this.setImgElement(); //img要素を取得して初期化する\r\n        _this.newCharacterEdge(); //画面端処理(もう片方の画面にもキャラを表示する処理)用クラスをnewする\r\n        _other_test__WEBPACK_IMPORTED_MODULE_2__.testList[\"characterRabbit constructor()\"] = true;\r\n        return _this;\r\n    }\r\n    characterRabbit.prototype.move = function () {\r\n        _super.prototype.move.call(this);\r\n        this.characterEdges[0].load(-1);\r\n        this.characterEdges[1].load(1);\r\n        _other_test__WEBPACK_IMPORTED_MODULE_2__.testList[\"characterRabbit move()\"] = true;\r\n    };\r\n    characterRabbit.prototype.newCharacterEdge = function () {\r\n        /*  必ず本体のimg要素を作成してから実行すること */\r\n        this.characterEdges[0] = new _characterEdge__WEBPACK_IMPORTED_MODULE_1__.characterEdge(this.imageName, \"L\"); //左端処理用クラス(見た目上のもの)\r\n        this.characterEdges[1] = new _characterEdge__WEBPACK_IMPORTED_MODULE_1__.characterEdge(this.imageName, \"R\"); //右端処理用クラス(見た目上のもの)\r\n        _other_test__WEBPACK_IMPORTED_MODULE_2__.testList[\"characterRabbit newCharacterEdge()\"] = true;\r\n    };\r\n    return characterRabbit;\r\n}(_character__WEBPACK_IMPORTED_MODULE_0__.character));\r\n\r\n\n\n//# sourceURL=webpack://my-webpack-project/./src/character/characterRabbit.ts?");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"canvas\": () => (/* binding */ canvas),\n/* harmony export */   \"createRandomScaffold\": () => (/* binding */ createRandomScaffold),\n/* harmony export */   \"key\": () => (/* binding */ key),\n/* harmony export */   \"playerCamera\": () => (/* binding */ playerCamera),\n/* harmony export */   \"rabbit\": () => (/* binding */ rabbit),\n/* harmony export */   \"scaffolds\": () => (/* binding */ scaffolds),\n/* harmony export */   \"sleep\": () => (/* binding */ sleep),\n/* harmony export */   \"stylesheet\": () => (/* binding */ stylesheet)\n/* harmony export */ });\n/* harmony import */ var _character_characterRabbit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./character/characterRabbit */ \"./src/character/characterRabbit.ts\");\n/* harmony import */ var _scaffold_normalScaffold__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scaffold/normalScaffold */ \"./src/scaffold/normalScaffold.ts\");\n/* harmony import */ var _scaffold_slipScaffold__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scaffold/slipScaffold */ \"./src/scaffold/slipScaffold.ts\");\n/* harmony import */ var _scaffold_carryScaffold__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scaffold/carryScaffold */ \"./src/scaffold/carryScaffold.ts\");\n/* harmony import */ var _scaffold_movingScaffold__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./scaffold/movingScaffold */ \"./src/scaffold/movingScaffold.ts\");\n/* harmony import */ var _other_keyDown_keyDown__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./other/keyDown/keyDown */ \"./src/other/keyDown/keyDown.ts\");\n/* harmony import */ var _other_camera_camera__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./other/camera/camera */ \"./src/other/camera/camera.ts\");\n/* harmony import */ var _other_display_reload__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./other/display/reload */ \"./src/other/display/reload.ts\");\n/* harmony import */ var _other_test__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./other/test */ \"./src/other/test.ts\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n(0,_other_display_reload__WEBPACK_IMPORTED_MODULE_7__.reload)(); //リロードしたときにゲーム画面ではなくタイトル画面を読み込む\r\nvar canvas = document.getElementById(\"myCanvas\"); //canvasを取得\r\nvar stylesheet = document.styleSheets.item(0); //CSSを読み込むための宣言\r\nvar rabbit = new _character_characterRabbit__WEBPACK_IMPORTED_MODULE_0__.characterRabbit(); //rabbitクラス\r\nvar key = new _other_keyDown_keyDown__WEBPACK_IMPORTED_MODULE_5__.keyDown(); //キーボードが押されたかどうか判断するクラス\r\nvar playerCamera = new _other_camera_camera__WEBPACK_IMPORTED_MODULE_6__.camera(); //プレイヤーに追随する視点用カメラ\r\nvar scaffolds = new Array; //足場配列を作成\r\nvar scaffoldsTypeList = [\"normal\", \"slip\", \"carry\", \"moving\"]; //型を纏めたリスト配列\r\nvar lotteryBox = new Array; //足場の種類を重み付き抽選するための箱を作成\r\nfunction getLotteryBox() {\r\n    _other_test__WEBPACK_IMPORTED_MODULE_8__.testList[\"index getLotteryBox()\"] = true;\r\n    return lotteryBox[Math.floor(Math.random() * lotteryBox.length)];\r\n}\r\nvar defaultMaxLevel = 10; //初期作成足場数\r\nvar loadScaffoldFrequency = 5; //足場の作成頻度\r\nvar canCreateScaffold = true; //現在、足場を作れるかどうか(現在足場を作っている間は作れないようにする)\r\nfunction createRandomScaffold(type, width, level) {\r\n    if (type === void 0) { type = getLotteryBox(); }\r\n    if (width === void 0) { width = Math.random() * 100 + 75; }\r\n    if (level === void 0) { level = scaffolds.length; }\r\n    _other_test__WEBPACK_IMPORTED_MODULE_8__.testList[\"index createRandomScaffold()\"] = true;\r\n    switch (type) {\r\n        case \"normal\":\r\n            _other_test__WEBPACK_IMPORTED_MODULE_8__.testList[\"index createRandomScaffold()_normal\"] = true;\r\n            scaffolds[level] = new _scaffold_normalScaffold__WEBPACK_IMPORTED_MODULE_1__.normalScaffold(level, width);\r\n            break;\r\n        case \"slip\":\r\n            _other_test__WEBPACK_IMPORTED_MODULE_8__.testList[\"index createRandomScaffold()_slip\"] = true;\r\n            scaffolds[level] = new _scaffold_slipScaffold__WEBPACK_IMPORTED_MODULE_2__.slipScaffold(level, width);\r\n            break;\r\n        case \"carry\":\r\n            _other_test__WEBPACK_IMPORTED_MODULE_8__.testList[\"index createRandomScaffold()_carry\"] = true;\r\n            scaffolds[level] = new _scaffold_carryScaffold__WEBPACK_IMPORTED_MODULE_3__.carryScaffold(level, width);\r\n            break;\r\n        case \"moving\":\r\n            _other_test__WEBPACK_IMPORTED_MODULE_8__.testList[\"index createRandomScaffold()_moving\"] = true;\r\n            scaffolds[level] = new _scaffold_movingScaffold__WEBPACK_IMPORTED_MODULE_4__.movingScaffold(level, width);\r\n            break;\r\n        default:\r\n            _other_test__WEBPACK_IMPORTED_MODULE_8__.testList[\"index createRandomScaffold()_default\"] = true;\r\n            break;\r\n    }\r\n}\r\nfunction createScaffolds(repetition) {\r\n    canCreateScaffold = false;\r\n    for (var i = 0; i < repetition; i++) { //足場配列に新しい足場を追加していく\r\n        createRandomScaffold(); //次の足場を作成\r\n    }\r\n    canCreateScaffold = true;\r\n    _other_test__WEBPACK_IMPORTED_MODULE_8__.testList[\"index createScaffolds()\"] = true;\r\n}\r\nfunction createDefaultScaffold() {\r\n    var interval = 10; //チュートリアルを行う足場の数\r\n    var defaultWidth = 175; //チュートリアル中の足場の幅\r\n    createRandomScaffold(\"normal\"); //初期足場を作成\r\n    /* 通常足場を登るチュートリアル */\r\n    for (var i = 0; i < interval; i++) {\r\n        createRandomScaffold(\"normal\", defaultWidth); //通常足場を作成\r\n    }\r\n    createRandomScaffold(\"normal\", canvas.width); //区切りの足場を作成\r\n    /* 滑る足場を登るチュートリアル */\r\n    lotteryBox = [\"normal\", \"slip\"]; //抽選箱を通常足場と滑る足場に設定\r\n    for (var i = 0; i < interval; i++) {\r\n        createRandomScaffold(getLotteryBox(), defaultWidth); //通常足場と滑る足場を作成\r\n    }\r\n    createRandomScaffold(\"normal\", canvas.width); //区切りの足場を作成\r\n    /* 動かされる足場を登るチュートリアル */\r\n    lotteryBox = [\"normal\", \"carry\"]; //抽選箱を通常足場と滑る足場に設定\r\n    for (var i = 0; i < interval; i++) {\r\n        createRandomScaffold(getLotteryBox(), defaultWidth); //通常足場を作成\r\n    }\r\n    createRandomScaffold(\"normal\", canvas.width); //区切りの足場を作成\r\n    /* 動く足場を登るチュートリアル */\r\n    lotteryBox = [\"normal\", \"moving\"]; //抽選箱を通常足場と滑る足場に設定\r\n    for (var i = 0; i < interval; i++) {\r\n        createRandomScaffold(getLotteryBox(), defaultWidth); //通常足場を作成\r\n    }\r\n    createRandomScaffold(\"normal\", canvas.width); //区切りの足場を作成\r\n    /* ごちゃ混ぜの足場を登るチュートリアル(足場の大きさは不変) */\r\n    lotteryBox = [\"normal\", \"slip\", \"carry\", \"moving\"]; //抽選箱を通常足場と滑る足場に設定\r\n    for (var i = 0; i < interval; i++) {\r\n        createRandomScaffold(getLotteryBox(), defaultWidth); //通常足場を作成\r\n    }\r\n    createRandomScaffold(\"normal\", canvas.width); //区切りの足場を作成\r\n    /* ここから本番 */\r\n    createScaffolds(defaultMaxLevel); //初期読み込み分の足場を作成\r\n    _other_test__WEBPACK_IMPORTED_MODULE_8__.testList[\"index createDefaultScaffold()\"] = true;\r\n}\r\ncreateDefaultScaffold();\r\n/* デバッグ用関数等 */\r\nvar sampleArea = document.getElementById(\"sampleArea\");\r\nfunction loadDebugArea() {\r\n    /* デバッグ用エリア(何か見たい変数等があればここに追加すれば画面下に文字が表示される) */\r\n    var content = \"\";\r\n    //content=showAllTest(\"html\")//テストを表示する\r\n    sampleArea.innerHTML = content;\r\n}\r\nfunction sleep(waitMsec) {\r\n    var startMsec = new Date();\r\n    // 指定ミリ秒間だけループさせる（CPUは常にビジー状態）\r\n    while (true) {\r\n        var testVar = new Date();\r\n        if (testVar - startMsec > waitMsec) {\r\n            break;\r\n        }\r\n    }\r\n    ;\r\n}\r\n/* 動作処理等 */\r\nfunction loadNewScaffold() {\r\n    if ((rabbit.currentScaffold().level > (scaffolds.length - 1) - loadScaffoldFrequency) && (canCreateScaffold)) { //もうそろそろ足場の最大数まで昇るかなってときに足場の数を追加するよ。足場を作っている間は新しく重複して作れないようにしてるよ。\r\n        createScaffolds(loadScaffoldFrequency);\r\n    }\r\n    _other_test__WEBPACK_IMPORTED_MODULE_8__.testList[\"index loadNewScaffold()\"] = true;\r\n}\r\nfunction updateDisplay() {\r\n    rabbit.move();\r\n    playerCamera.y = rabbit.height - 100;\r\n    for (var i = 0; i < scaffolds.length; i++) { //for文で全部の足場を更新\r\n        scaffolds[i].scrole();\r\n    }\r\n    _other_test__WEBPACK_IMPORTED_MODULE_8__.testList[\"index updateDisplay()\"] = true;\r\n}\r\nfunction isKeyDown() {\r\n    /*     【仕様】\r\n        左右キーは同時に押すとどちらにも移動できない(どちらか片方を押しているときのみ移動できる)\r\n        ジャンプはジャンプキーを押している間に跳躍力を貯めて、ジャンプキーを離すと貯めた跳躍力の分だけ跳べる\r\n        接地中の移動はできない */\r\n    if ((key.key_left === true) && (key.key_right === false)) { //左移動キーが押されている間、moveLeft関数を呼び出す\r\n        rabbit.moveLeft();\r\n        _other_test__WEBPACK_IMPORTED_MODULE_8__.testList[\"index isKeyDown()_left\"] = true;\r\n    }\r\n    if ((key.key_right === true) && (key.key_left === false)) { //右移動キーが押されている間、moveRight関数を呼び出す\r\n        rabbit.moveRight();\r\n        _other_test__WEBPACK_IMPORTED_MODULE_8__.testList[\"index isKeyDown()_right\"] = true;\r\n    }\r\n    if ((key.key_jump === true)) { //ジャンプキーが押されている間、jumpCharge関数を呼び出す\r\n        rabbit.jumpCharge();\r\n        _other_test__WEBPACK_IMPORTED_MODULE_8__.testList[\"index isKeyDown()_space\"] = true;\r\n    }\r\n    _other_test__WEBPACK_IMPORTED_MODULE_8__.testList[\"index isKeyDown()\"] = true;\r\n}\r\nvar showScore = document.getElementById(\"showScore\"); //スコアを表示するためのHTML要素を取得\r\nvar highScore = 0; //ハイスコア\r\nfunction showScoreArea() {\r\n    showScore.innerHTML = \"Score:\".concat(Math.round(rabbit.height / 100), \"m\"); //1px1cmで高さを算出してスコアを表示\r\n    if (Math.round(rabbit.height / 100) > highScore) { //今のスコアがハイスコアかどうか\r\n        highScore = Math.round(rabbit.height / 100); //ハイスコアを更新\r\n    }\r\n    showScore.innerHTML += \"<br>\" + \"High Score:\".concat(highScore, \"m\"); //ハイスコアを改行して表示\r\n    _other_test__WEBPACK_IMPORTED_MODULE_8__.testList[\"index showScoreArea()\"] = true;\r\n}\r\n//playBGM()//BGMを再生する(基本は再生しない)\r\nsetInterval(main, 1000 / 60); //メインループ、起動\r\nfunction main() {\r\n    addEventListener(\"keydown\", key.keyDownFunc); //キーボードが押された時、keyDownFunc関数を呼び出す\r\n    addEventListener(\"keyup\", key.keyUpFunc); //キーボードが離された時、keyUpFunc関数を呼び出す\r\n    loadDebugArea(); //デバッグ用エリアを更新\r\n    isKeyDown(); //キーが押されているかどうか判断\r\n    showScoreArea(); //表示するスコアを更新\r\n    updateDisplay(); //画面を更新(rabbitやscaffolds等)\r\n    loadNewScaffold(); //足場を途切れないように追加していく処理\r\n    _other_test__WEBPACK_IMPORTED_MODULE_8__.testList[\"index main()\"] = true;\r\n}\r\n\n\n//# sourceURL=webpack://my-webpack-project/./src/index.ts?");

/***/ }),

/***/ "./src/other/audio/playAudio.ts":
/*!**************************************!*\
  !*** ./src/other/audio/playAudio.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"playBGM\": () => (/* binding */ playBGM),\n/* harmony export */   \"playJumpSE\": () => (/* binding */ playJumpSE)\n/* harmony export */ });\n/* harmony import */ var _test__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../test */ \"./src/other/test.ts\");\n\r\nvar BGM = new Audio(\"./../resource/sound/bgm/bgm1.wav\"); //BGM\r\nfunction playJumpSE(audioType) {\r\n    switch (audioType) {\r\n        case \"jump\":\r\n            var jumpSound = new Audio(\"./../resource/sound/se/jump.wav\"); //ジャンプSE\r\n            jumpSound.play(); //ジャンプSEを再生する\r\n    }\r\n    _test__WEBPACK_IMPORTED_MODULE_0__.testList[\"playAudio playJumpSE()\"] = true;\r\n}\r\nfunction playBGM() {\r\n    BGM.loop = true; //ループ再生をオンにする\r\n    BGM.play(); //BGMを再生する\r\n    _test__WEBPACK_IMPORTED_MODULE_0__.testList[\"playAudio playBGM()\"] = true;\r\n}\r\n\n\n//# sourceURL=webpack://my-webpack-project/./src/other/audio/playAudio.ts?");

/***/ }),

/***/ "./src/other/camera/camera.ts":
/*!************************************!*\
  !*** ./src/other/camera/camera.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"camera\": () => (/* binding */ camera)\n/* harmony export */ });\n/* harmony import */ var _test__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../test */ \"./src/other/test.ts\");\n\r\nvar camera = /** @class */ (function () {\r\n    function camera() {\r\n        this._y = 0;\r\n    }\r\n    Object.defineProperty(camera.prototype, \"y\", {\r\n        /* getter/setter */\r\n        get: function () {\r\n            _test__WEBPACK_IMPORTED_MODULE_0__.testList[\"camera get y()\"] = true;\r\n            return this._y;\r\n        },\r\n        set: function (y) {\r\n            _test__WEBPACK_IMPORTED_MODULE_0__.testList[\"camera set y()\"] = true;\r\n            this._y = y;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return camera;\r\n}());\r\n\r\n\n\n//# sourceURL=webpack://my-webpack-project/./src/other/camera/camera.ts?");

/***/ }),

/***/ "./src/other/display/reload.ts":
/*!*************************************!*\
  !*** ./src/other/display/reload.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"reload\": () => (/* binding */ reload)\n/* harmony export */ });\n/* harmony import */ var _test__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../test */ \"./src/other/test.ts\");\n\r\nfunction reload() {\r\n    if (window.performance) {\r\n        if (window.performance.navigation.type === 1) {\r\n            location.href = \"./../title.html\"; //タイトル画面を読み込む\r\n        }\r\n    }\r\n    _test__WEBPACK_IMPORTED_MODULE_0__.testList[\"reload reload()\"] = true;\r\n}\r\n\n\n//# sourceURL=webpack://my-webpack-project/./src/other/display/reload.ts?");

/***/ }),

/***/ "./src/other/keyDown/keyDown.ts":
/*!**************************************!*\
  !*** ./src/other/keyDown/keyDown.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"keyDown\": () => (/* binding */ keyDown)\n/* harmony export */ });\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../index */ \"./src/index.ts\");\n/* harmony import */ var _test__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../test */ \"./src/other/test.ts\");\n\r\n\r\nvar keyDown = /** @class */ (function () {\r\n    function keyDown() {\r\n        this.key_left = false; //左移動キーが押されているかどうか\r\n        this.key_right = false; //右移動キーが押されているかどうか\r\n        this.key_jump = false; //ジャンプキーが押されているかどうか\r\n    }\r\n    keyDown.prototype.keyDownFunc = function (event) {\r\n        switch (event.keyCode) {\r\n            case 65: //「A」キーが押されたとき\r\n                this.key_left = true;\r\n                _index__WEBPACK_IMPORTED_MODULE_0__.key.key_left = this.key_left;\r\n                _test__WEBPACK_IMPORTED_MODULE_1__.testList[\"keyDown keyDownFunc()_A\"] = true;\r\n                break;\r\n            case 68: //「D」キーが押されたとき\r\n                this.key_right = true;\r\n                _index__WEBPACK_IMPORTED_MODULE_0__.key.key_right = this.key_right;\r\n                _test__WEBPACK_IMPORTED_MODULE_1__.testList[\"keyDown keyDownFunc()_D\"] = true;\r\n                break;\r\n            case 32: //「Space」キーが押されたとき\r\n                this.key_jump = true;\r\n                _index__WEBPACK_IMPORTED_MODULE_0__.key.key_jump = this.key_jump;\r\n                _test__WEBPACK_IMPORTED_MODULE_1__.testList[\"keyDown keyDownFunc()_Space\"] = true;\r\n                break;\r\n        }\r\n        _test__WEBPACK_IMPORTED_MODULE_1__.testList[\"keyDown keyDownFunc()\"] = true;\r\n    };\r\n    keyDown.prototype.keyUpFunc = function (event) {\r\n        switch (event.keyCode) {\r\n            case 65: //「A」キーが離されたとき\r\n                this.key_left = false;\r\n                _index__WEBPACK_IMPORTED_MODULE_0__.key.key_left = this.key_left;\r\n                _test__WEBPACK_IMPORTED_MODULE_1__.testList[\"keyDown keyUpFunc()_A\"] = true;\r\n                break;\r\n            case 68: //「D」キーが離されたとき\r\n                this.key_right = false;\r\n                _index__WEBPACK_IMPORTED_MODULE_0__.key.key_right = this.key_right;\r\n                _test__WEBPACK_IMPORTED_MODULE_1__.testList[\"keyDown keyUpFunc()_D\"] = true;\r\n                break;\r\n            case 32: //「Space」キーが離されたとき\r\n                this.key_jump = false;\r\n                _index__WEBPACK_IMPORTED_MODULE_0__.key.key_jump = this.key_jump;\r\n                _index__WEBPACK_IMPORTED_MODULE_0__.rabbit.jump(); //Spaceキーが離されたとき、rabbitの跳躍力を解放\r\n                _test__WEBPACK_IMPORTED_MODULE_1__.testList[\"keyDown keyUpFunc()_Space\"] = true;\r\n                break;\r\n            case 13: //「Enter」キーが離されたとき(デバッグ用)\r\n                /* デバッグ用処理 */\r\n                console.log((0,_test__WEBPACK_IMPORTED_MODULE_1__.showAllTest)(\"console\")); //コンソールにテストを出力する\r\n                break;\r\n        }\r\n        _test__WEBPACK_IMPORTED_MODULE_1__.testList[\"keyDown keyUpFunc()\"] = true;\r\n    };\r\n    return keyDown;\r\n}());\r\n\r\n\n\n//# sourceURL=webpack://my-webpack-project/./src/other/keyDown/keyDown.ts?");

/***/ }),

/***/ "./src/other/test.ts":
/*!***************************!*\
  !*** ./src/other/test.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"showAllTest\": () => (/* binding */ showAllTest),\n/* harmony export */   \"testList\": () => (/* binding */ testList)\n/* harmony export */ });\nvar testList = {}; //テストが成功したかどうか管理するための配列(キーはテストの名前、値はテストが成功したかどうか)\r\n/* テスト一覧 */\r\n/* index.ts */\r\ntestList[\"index getLotteryBox()\"] = false;\r\ntestList[\"index createRandomScaffold()\"] = false;\r\ntestList[\"index createRandomScaffold()_normal\"] = false;\r\ntestList[\"index createRandomScaffold()_slip\"] = false;\r\ntestList[\"index createRandomScaffold()_carry\"] = false;\r\ntestList[\"index createRandomScaffold()_moving\"] = false;\r\ntestList[\"index createRandomScaffold()_default\"] = true; //例外処理なのでtrueにならない\r\ntestList[\"index createScaffolds()\"] = false;\r\ntestList[\"index createDefaultScaffold()\"] = false;\r\ntestList[\"index loadNewScaffold()\"] = false;\r\ntestList[\"index updateDisplay()\"] = false;\r\ntestList[\"index isKeyDown()\"] = false;\r\ntestList[\"index isKeyDown()_left\"] = false;\r\ntestList[\"index isKeyDown()_right\"] = false;\r\ntestList[\"index isKeyDown()_space\"] = false;\r\ntestList[\"index showScoreArea()\"] = false;\r\ntestList[\"index main()\"] = false;\r\n/* scaffold */\r\ntestList[\"slipScaffold constructor()\"] = false;\r\ntestList[\"carryScaffold constructor()\"] = false;\r\ntestList[\"carryScaffold get direction()\"] = false;\r\ntestList[\"carryScaffold set direction()\"] = false;\r\ntestList[\"carryScaffold setImgElement()\"] = false;\r\ntestList[\"movingScaffold get x()\"] = false;\r\ntestList[\"movingScaffold set x()\"] = false;\r\ntestList[\"movingScaffold set x() 右端\"] = false;\r\ntestList[\"movingScaffold set x() 左端\"] = false;\r\ntestList[\"movingScaffold set x() 通常\"] = false;\r\ntestList[\"movingScaffold get direction()\"] = false;\r\ntestList[\"movingScaffold set direction()\"] = false;\r\ntestList[\"movingScaffold scrole()\"] = false;\r\ntestList[\"normalScaffold constructor()\"] = false;\r\ntestList[\"scaffold constructor() 初期足場のとき\"] = false;\r\ntestList[\"scaffold constructor() 初期足場以外のとき\"] = false;\r\ntestList[\"scaffold constructor()\"] = false;\r\ntestList[\"scaffold get x()\"] = false;\r\ntestList[\"scaffold set x()\"] = false;\r\ntestList[\"scaffold get y()\"] = false;\r\ntestList[\"scaffold set y()\"] = false;\r\ntestList[\"scaffold get width()\"] = false;\r\ntestList[\"scaffold set width()\"] = false;\r\ntestList[\"scaffold get height()\"] = false;\r\ntestList[\"scaffold set height()\"] = false;\r\ntestList[\"scaffold get friction()\"] = false;\r\ntestList[\"scaffold set friction()\"] = false;\r\ntestList[\"scaffold createImgElement() 初期足場\"] = false;\r\ntestList[\"scaffold createImgElement() 初期足場以外\"] = false;\r\ntestList[\"scaffold createImgElement()\"] = false;\r\ntestList[\"scaffold setImgElement()\"] = false;\r\ntestList[\"scaffold createCSSRule()\"] = false;\r\ntestList[\"scaffold scrole()\"] = false;\r\n/* other */\r\ntestList[\"playAudio playJumpSE()\"] = false;\r\ntestList[\"playAudio playBGM()\"] = true; //trueにならない仕様\r\ntestList[\"keyDown keyDownFunc()\"] = false;\r\ntestList[\"keyDown keyDownFunc()_A\"] = false;\r\ntestList[\"keyDown keyDownFunc()_D\"] = false;\r\ntestList[\"keyDown keyDownFunc()_Space\"] = false;\r\ntestList[\"keyDown keyUpFunc()\"] = false;\r\ntestList[\"keyDown keyUpFunc()_A\"] = false;\r\ntestList[\"keyDown keyUpFunc()_D\"] = false;\r\ntestList[\"keyDown keyUpFunc()_Space\"] = false;\r\ntestList[\"reload reload()\"] = false;\r\ntestList[\"camera get y()\"] = false;\r\ntestList[\"camera set y()\"] = false;\r\n/* character */\r\ntestList[\"character get x()\"] = false;\r\ntestList[\"character set x()\"] = false;\r\ntestList[\"character set x()_左端\"] = false;\r\ntestList[\"character set x()_右端\"] = false;\r\ntestList[\"character set x()_通常\"] = false;\r\ntestList[\"character get y()\"] = false;\r\ntestList[\"character set y()\"] = false;\r\ntestList[\"character get height()\"] = false;\r\ntestList[\"character set height()\"] = false;\r\ntestList[\"character get dx()\"] = false;\r\ntestList[\"character set dx()_右最大値超過\"] = false;\r\ntestList[\"character set dx()_左最大値超過\"] = false;\r\ntestList[\"character set dx()_通常\"] = false;\r\ntestList[\"character set dx()\"] = false;\r\ntestList[\"character get dy()\"] = false;\r\ntestList[\"character set dy()\"] = false;\r\ntestList[\"character get jumpVelocity()\"] = false;\r\ntestList[\"character set jumpVelocity()_最大値超過\"] = false;\r\ntestList[\"character set jumpVelocity()_通常\"] = false;\r\ntestList[\"character set jumpVelocity()\"] = false;\r\ntestList[\"character createImgElement()\"] = false;\r\ntestList[\"character setImgElement()\"] = false;\r\ntestList[\"character move()\"] = false;\r\ntestList[\"character moveX()\"] = false;\r\ntestList[\"character moveX()_地上\"] = false;\r\ntestList[\"character moveX()_空中\"] = false;\r\ntestList[\"character moveX()_地上_carry\"] = false;\r\ntestList[\"character moveX()_地上_moving\"] = false;\r\ntestList[\"character moveX()_地上_通常\"] = false;\r\ntestList[\"character moveY()\"] = false;\r\ntestList[\"character moveY()_空中\"] = false;\r\ntestList[\"character moveY()_地上\"] = false;\r\ntestList[\"character moveY()_足場に留まる\"] = false;\r\ntestList[\"character moveY()_足場に留まらない\"] = false;\r\ntestList[\"character updateImages()\"] = false;\r\ntestList[\"character getStates()\"] = false;\r\ntestList[\"character currentScaffold()\"] = false;\r\ntestList[\"character checkAboveScaffold()\"] = false;\r\ntestList[\"character checkAboveScaffold()_足場上\"] = false;\r\ntestList[\"character checkAboveScaffold()_足場外\"] = false;\r\ntestList[\"character checkOnGround()\"] = false;\r\ntestList[\"character checkOnGround()_接地\"] = false;\r\ntestList[\"character checkOnGround()_空中\"] = false;\r\ntestList[\"character moveLeft()_空中\"] = false;\r\ntestList[\"character moveLeft()\"] = false;\r\ntestList[\"character moveRight()_空中\"] = false;\r\ntestList[\"character moveRight()\"] = false;\r\ntestList[\"character getSpeed()\"] = false;\r\ntestList[\"character jumpCharge()_最大縮み\"] = false;\r\ntestList[\"character jumpCharge()_通常縮み\"] = false;\r\ntestList[\"character jumpCharge()\"] = false;\r\ntestList[\"character jump()_接地\"] = false;\r\ntestList[\"character jump()\"] = false;\r\ntestList[\"character movedVelocity()\"] = false;\r\ntestList[\"character movedVelocity()_carry\"] = false;\r\ntestList[\"character movedVelocity()_moving\"] = false;\r\ntestList[\"characterRabbit constructor()\"] = false;\r\ntestList[\"characterRabbit move()\"] = false;\r\ntestList[\"characterEdge constructor()\"] = false;\r\ntestList[\"characterEdge load()\"] = false;\r\nfunction showAllTest(option) {\r\n    var newLine = \"\";\r\n    switch (option) {\r\n        case \"console\":\r\n            newLine = \"\\n\";\r\n            break;\r\n        case \"html\":\r\n            newLine = \"<br>\";\r\n            break;\r\n    }\r\n    var result = \"\";\r\n    var countSuccess = 0; //テストが成功した数\r\n    var testLength = Object.keys(testList).length; //テストの数\r\n    for (var i in testList) { //テストリストの中身(キーと値)を一括で取得する\r\n        var testTitle = i;\r\n        var isTestSuccess = testList[i];\r\n        result += \"\".concat(testTitle, \":\").concat(isTestSuccess) + newLine;\r\n        if (isTestSuccess) { //テストが成功した数を数える\r\n            countSuccess++;\r\n        }\r\n    }\r\n    result = result.replace(/false/g, redText(\"false\", option)); //\"falseを赤文字でハイライト\"\r\n    result += \"Total:\".concat(countSuccess, \"/\").concat(testLength, \"\\t\").concat(Math.round((countSuccess / testLength) * 1000) / 10, \"%\");\r\n    return result;\r\n}\r\nfunction redText(text, option) {\r\n    var red = \"\";\r\n    var reset = \"\";\r\n    switch (option) {\r\n        case \"console\":\r\n            red = \"\\u001b[31m\";\r\n            reset = \"\\u001b[0m\";\r\n            break;\r\n        case \"html\":\r\n            red = \"<font color='red'>\";\r\n            reset = \"</font>\";\r\n    }\r\n    var result = red + text + reset;\r\n    return result;\r\n}\r\n\n\n//# sourceURL=webpack://my-webpack-project/./src/other/test.ts?");

/***/ }),

/***/ "./src/scaffold/carryScaffold.ts":
/*!***************************************!*\
  !*** ./src/scaffold/carryScaffold.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"carryScaffold\": () => (/* binding */ carryScaffold)\n/* harmony export */ });\n/* harmony import */ var _scaffold__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scaffold */ \"./src/scaffold/scaffold.ts\");\n/* harmony import */ var _other_test__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../other/test */ \"./src/other/test.ts\");\nvar __extends = (undefined && undefined.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n\r\n\r\nvar carryScaffold = /** @class */ (function (_super) {\r\n    __extends(carryScaffold, _super);\r\n    function carryScaffold(_level, _width) {\r\n        if (_width === void 0) { _width = _scaffold__WEBPACK_IMPORTED_MODULE_0__.scaffold.defaultWidth; }\r\n        var _this = _super.call(this, _level, _width) || this;\r\n        _this._direction = 1; //キャラが動かされる方向 左が-,右が1\r\n        _this.carryVelocity = 3; //キャラを運ぶスピード(絶対値)\r\n        _this.direction = Math.floor(Math.random() * 2) * 2 - 1; //向きを-1(左)か1(右)でランダムに代入\r\n        _this.imageName = \"carryScaffold.jpg\";\r\n        _this.createImgElement(_this.imageName); //足場のimg要素を追加する\r\n        _this.setImgElement(); //img要素を取得して初期化する\r\n        _other_test__WEBPACK_IMPORTED_MODULE_1__.testList[\"carryScaffold constructor()\"] = true;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(carryScaffold.prototype, \"direction\", {\r\n        /* getter/setter */\r\n        get: function () {\r\n            _other_test__WEBPACK_IMPORTED_MODULE_1__.testList[\"carryScaffold get direction()\"] = true;\r\n            return this._direction;\r\n        },\r\n        set: function (direction) {\r\n            _other_test__WEBPACK_IMPORTED_MODULE_1__.testList[\"carryScaffold set direction()\"] = true;\r\n            this._direction = direction;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    carryScaffold.prototype.setImgElement = function () {\r\n        _super.prototype.setImgElement.call(this);\r\n        this.scaffoldID.style.transform = \"rotateY(\" + String(((this.direction + 1) / 2) * 180) + \"deg)\"; //左右を向く -1or1を0or1に変換して使用する\r\n        _other_test__WEBPACK_IMPORTED_MODULE_1__.testList[\"carryScaffold setImgElement()\"] = true;\r\n    };\r\n    return carryScaffold;\r\n}(_scaffold__WEBPACK_IMPORTED_MODULE_0__.scaffold));\r\n\r\n\n\n//# sourceURL=webpack://my-webpack-project/./src/scaffold/carryScaffold.ts?");

/***/ }),

/***/ "./src/scaffold/movingScaffold.ts":
/*!****************************************!*\
  !*** ./src/scaffold/movingScaffold.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"movingScaffold\": () => (/* binding */ movingScaffold)\n/* harmony export */ });\n/* harmony import */ var _scaffold__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scaffold */ \"./src/scaffold/scaffold.ts\");\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../index */ \"./src/index.ts\");\n/* harmony import */ var _other_test__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../other/test */ \"./src/other/test.ts\");\nvar __extends = (undefined && undefined.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n\r\n\r\n\r\nvar movingScaffold = /** @class */ (function (_super) {\r\n    __extends(movingScaffold, _super);\r\n    function movingScaffold(_level, _width) {\r\n        if (_width === void 0) { _width = _scaffold__WEBPACK_IMPORTED_MODULE_0__.scaffold.defaultWidth; }\r\n        var _this = _super.call(this, _level, _width) || this;\r\n        _this._direction = 1; //足場が動く方向 左が-1,右が1\r\n        _this.moveVelocity = 3; //足場が動くスピード(絶対値)\r\n        _this.direction = Math.floor(Math.random() * 2) * 2 - 1; //向きを-1(左)か1(右)でランダムに代入\r\n        _this.imageName = \"movingScaffold.jpg\";\r\n        _this.createImgElement(_this.imageName); //足場のimg要素を追加する\r\n        _this.setImgElement(); //img要素を取得して初期化する\r\n        _other_test__WEBPACK_IMPORTED_MODULE_2__.testList[\"movingScaffold constructor()\"] = true;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(movingScaffold.prototype, \"x\", {\r\n        /* getter/setter */\r\n        get: function () {\r\n            _other_test__WEBPACK_IMPORTED_MODULE_2__.testList[\"movingScaffold get x()\"] = true;\r\n            return this._x;\r\n        },\r\n        set: function (x) {\r\n            /* 足場が画面外まで出ないようにする処理 */\r\n            if (x + this.width / 2 > _index__WEBPACK_IMPORTED_MODULE_1__.canvas.width / 2) { //画面の右端に出そうなとき\r\n                this._x = _index__WEBPACK_IMPORTED_MODULE_1__.canvas.width / 2 - this.width / 2; //右端にギリギリまで寄せる処理\r\n                this.direction = -1; //左を向く 右端まで行ったら次は左へ行く\r\n                _other_test__WEBPACK_IMPORTED_MODULE_2__.testList[\"movingScaffold set x() 右端\"] = true;\r\n            }\r\n            else if (x - this.width / 2 < -_index__WEBPACK_IMPORTED_MODULE_1__.canvas.width / 2) { //画面の左端に出そうなとき\r\n                this._x = -(_index__WEBPACK_IMPORTED_MODULE_1__.canvas.width / 2 - this.width / 2);\r\n                this.direction = 1; //右を向く 左端まで行ったら次は右へ行く\r\n                _other_test__WEBPACK_IMPORTED_MODULE_2__.testList[\"movingScaffold set x() 左端\"] = true;\r\n            }\r\n            else { //通常処理\r\n                this._x = x;\r\n                _other_test__WEBPACK_IMPORTED_MODULE_2__.testList[\"movingScaffold set x() 通常\"] = true;\r\n            }\r\n            _other_test__WEBPACK_IMPORTED_MODULE_2__.testList[\"movingScaffold set x()\"] = true;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(movingScaffold.prototype, \"direction\", {\r\n        get: function () {\r\n            _other_test__WEBPACK_IMPORTED_MODULE_2__.testList[\"movingScaffold get direction()\"] = true;\r\n            return this._direction;\r\n        },\r\n        set: function (direction) {\r\n            _other_test__WEBPACK_IMPORTED_MODULE_2__.testList[\"movingScaffold set direction()\"] = true;\r\n            this._direction = direction;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    movingScaffold.prototype.scrole = function () {\r\n        this.x += this.direction * this.moveVelocity; //足場を動かす処理 画面端まで行った時の処理はthis.xのsetterに記述\r\n        _super.prototype.scrole.call(this);\r\n        _other_test__WEBPACK_IMPORTED_MODULE_2__.testList[\"movingScaffold scrole()\"] = true;\r\n    };\r\n    return movingScaffold;\r\n}(_scaffold__WEBPACK_IMPORTED_MODULE_0__.scaffold));\r\n\r\n\n\n//# sourceURL=webpack://my-webpack-project/./src/scaffold/movingScaffold.ts?");

/***/ }),

/***/ "./src/scaffold/normalScaffold.ts":
/*!****************************************!*\
  !*** ./src/scaffold/normalScaffold.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"normalScaffold\": () => (/* binding */ normalScaffold)\n/* harmony export */ });\n/* harmony import */ var _scaffold__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scaffold */ \"./src/scaffold/scaffold.ts\");\n/* harmony import */ var _other_test__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../other/test */ \"./src/other/test.ts\");\nvar __extends = (undefined && undefined.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n\r\n\r\nvar normalScaffold = /** @class */ (function (_super) {\r\n    __extends(normalScaffold, _super);\r\n    function normalScaffold(_level, _width) {\r\n        if (_width === void 0) { _width = _scaffold__WEBPACK_IMPORTED_MODULE_0__.scaffold.defaultWidth; }\r\n        var _this = _super.call(this, _level, _width) || this;\r\n        _this.imageName = \"normalScaffold.jpg\";\r\n        _this.createImgElement(_this.imageName); //足場のimg要素を追加する\r\n        _this.setImgElement(); //img要素を取得して初期化する\r\n        _other_test__WEBPACK_IMPORTED_MODULE_1__.testList[\"normalScaffold constructor()\"] = true;\r\n        return _this;\r\n    }\r\n    return normalScaffold;\r\n}(_scaffold__WEBPACK_IMPORTED_MODULE_0__.scaffold));\r\n\r\n\n\n//# sourceURL=webpack://my-webpack-project/./src/scaffold/normalScaffold.ts?");

/***/ }),

/***/ "./src/scaffold/scaffold.ts":
/*!**********************************!*\
  !*** ./src/scaffold/scaffold.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"scaffold\": () => (/* binding */ scaffold)\n/* harmony export */ });\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../index */ \"./src/index.ts\");\n/* harmony import */ var _other_test__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../other/test */ \"./src/other/test.ts\");\n\r\n\r\n\r\nvar scaffold = /** @class */ (function () {\r\n    function scaffold(_level, _width) {\r\n        if (_width === void 0) { _width = scaffold.defaultWidth; }\r\n        this._x = 0; //X座標\r\n        this._y = 0; //y座標\r\n        this._height = 0; //足場の位置する高さ\r\n        this._width = scaffold.defaultWidth; //広さ\r\n        this._friction = 1; //摩擦係数(frictionalCoefficient)\r\n        this.imageAddress = \"./../resource/image/scaffold/\";\r\n        this.imageName = \"\";\r\n        this.level = _level;\r\n        this.IDName = \"scaffold\" + String(this.level); //CSSで使うIDを「scaffold」+「階層番号」に設定\r\n        this.createCSSRule(this.IDName); //ID名でCSSルールを作成\r\n        this.height = this.level * scaffold.scaffoldDistance; //足場の位置する高さを\"階層×足場同士の幅\"として設定\r\n        if (this.level === 0) { //作るのが初期足場のとき、幅や場所を固定\r\n            this.width = _index__WEBPACK_IMPORTED_MODULE_0__.canvas.width;\r\n            this.x = 0;\r\n            _other_test__WEBPACK_IMPORTED_MODULE_1__.testList[\"scaffold constructor() 初期足場のとき\"] = true;\r\n        }\r\n        else { //それ以外の足場のとき、\r\n            this.width = _width;\r\n            this.x = Math.random() * -(_index__WEBPACK_IMPORTED_MODULE_0__.canvas.width - this.width) + (_index__WEBPACK_IMPORTED_MODULE_0__.canvas.width - this.width) / 2; //画面内に足場が収まるようにx座標をランダムに設定\r\n            _other_test__WEBPACK_IMPORTED_MODULE_1__.testList[\"scaffold constructor() 初期足場以外のとき\"] = true;\r\n        }\r\n        this.y = scaffold.firstHeight + scaffold.scaffoldDistance * this.level;\r\n        this.height = scaffold.scaffoldDistance * this.level;\r\n        _other_test__WEBPACK_IMPORTED_MODULE_1__.testList[\"scaffold constructor()\"] = true;\r\n    }\r\n    Object.defineProperty(scaffold.prototype, \"x\", {\r\n        /* getter/setter */\r\n        get: function () {\r\n            _other_test__WEBPACK_IMPORTED_MODULE_1__.testList[\"scaffold get x()\"] = true;\r\n            return this._x;\r\n        },\r\n        set: function (x) {\r\n            _other_test__WEBPACK_IMPORTED_MODULE_1__.testList[\"scaffold set x()\"] = true;\r\n            this._x = x;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(scaffold.prototype, \"y\", {\r\n        get: function () {\r\n            _other_test__WEBPACK_IMPORTED_MODULE_1__.testList[\"scaffold get y()\"] = true;\r\n            return this._y;\r\n        },\r\n        set: function (y) {\r\n            _other_test__WEBPACK_IMPORTED_MODULE_1__.testList[\"scaffold set y()\"] = true;\r\n            this._y = y;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(scaffold.prototype, \"width\", {\r\n        get: function () {\r\n            _other_test__WEBPACK_IMPORTED_MODULE_1__.testList[\"scaffold get width()\"] = true;\r\n            return this._width;\r\n        },\r\n        set: function (width) {\r\n            _other_test__WEBPACK_IMPORTED_MODULE_1__.testList[\"scaffold set width()\"] = true;\r\n            this._width = width;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(scaffold.prototype, \"height\", {\r\n        get: function () {\r\n            _other_test__WEBPACK_IMPORTED_MODULE_1__.testList[\"scaffold get height()\"] = true;\r\n            return this._height;\r\n        },\r\n        set: function (height) {\r\n            _other_test__WEBPACK_IMPORTED_MODULE_1__.testList[\"scaffold set height()\"] = true;\r\n            this._height = height;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(scaffold.prototype, \"friction\", {\r\n        get: function () {\r\n            _other_test__WEBPACK_IMPORTED_MODULE_1__.testList[\"scaffold get friction()\"] = true;\r\n            return this._friction;\r\n        },\r\n        set: function (friction) {\r\n            _other_test__WEBPACK_IMPORTED_MODULE_1__.testList[\"scaffold set friction()\"] = true;\r\n            this._friction = friction;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /* 初期処理 */\r\n    scaffold.prototype.createImgElement = function (_imageName) {\r\n        if (this.level === 0) { //初期足場ならdocument.writeでHTML要素で作る(要素を追加する位置の基礎となる0番idを作るため)\r\n            document.write(\"<img id=\\\"\".concat(this.IDName, \"\\\" src=\\\"\").concat(this.imageAddress).concat(_imageName, \"\\\">\"));\r\n            _other_test__WEBPACK_IMPORTED_MODULE_1__.testList[\"scaffold createImgElement() 初期足場\"] = true;\r\n        }\r\n        else {\r\n            var formerScaffoldID = \"scaffold\" + String(this.level - 1); //1つ下の足場のID\r\n            var formerScaffold = document.getElementById(formerScaffoldID); //1つ下の足場のHTML要素\r\n            formerScaffold.insertAdjacentHTML('afterend', \"<img id=\\\"\".concat(this.IDName, \"\\\" src=\\\"\").concat(this.imageAddress).concat(_imageName, \"\\\">\")); //1つ下の足場のimg要素の後に新しい足場のimg要素を追加\r\n            _other_test__WEBPACK_IMPORTED_MODULE_1__.testList[\"scaffold createImgElement() 初期足場以外\"] = true;\r\n        }\r\n        _other_test__WEBPACK_IMPORTED_MODULE_1__.testList[\"scaffold createImgElement()\"] = true;\r\n    };\r\n    scaffold.prototype.setImgElement = function () {\r\n        this.scaffoldID = document.getElementById(this.IDName); //足場のHTML要素を取得\r\n        this.scaffoldID.style.width = this.width + \"px\"; //初期大きさ設定(幅)\r\n        this.scaffoldID.style.height = scaffold.thickness + \"px\"; //初期大きさ設定(厚さ)\r\n        this.scaffoldID.style.left = ((this.x) + (_index__WEBPACK_IMPORTED_MODULE_0__.canvas.width / 2) - (this.width / 2)) + \"px\"; //x座標設定\r\n        this.scaffoldID.style.top = (_index__WEBPACK_IMPORTED_MODULE_0__.canvas.height - (this.y - _index__WEBPACK_IMPORTED_MODULE_0__.playerCamera.y)) + \"px\"; //y座標設定 高さは\"50\r\n        _other_test__WEBPACK_IMPORTED_MODULE_1__.testList[\"scaffold setImgElement()\"] = true;\r\n    };\r\n    /* 動作処理 */\r\n    scaffold.prototype.createCSSRule = function (idName) {\r\n        var contents = \"#\" + idName + \"{position: absolute;object-fit: none;z-index: 1;top: 0px;left: 0px;transform: rotateY(0deg);width: 150px;height: 20px;color: white;}\";\r\n        _index__WEBPACK_IMPORTED_MODULE_0__.stylesheet.insertRule(contents, _index__WEBPACK_IMPORTED_MODULE_0__.stylesheet.cssRules.length); //スタイルシートの末尾に変数contentsで設定した中身を追加\r\n        _other_test__WEBPACK_IMPORTED_MODULE_1__.testList[\"scaffold createCSSRule()\"] = true;\r\n    };\r\n    scaffold.prototype.scrole = function () {\r\n        this.scaffoldID.style.left = ((this.x) + (_index__WEBPACK_IMPORTED_MODULE_0__.canvas.width / 2) - (this.width / 2)) + \"px\"; //x座標設定\r\n        this.scaffoldID.style.top = (_index__WEBPACK_IMPORTED_MODULE_0__.canvas.height - (this.y - _index__WEBPACK_IMPORTED_MODULE_0__.playerCamera.y)) + \"px\"; //y座標設定 高さは\"50+200*level\"\r\n        _other_test__WEBPACK_IMPORTED_MODULE_1__.testList[\"scaffold scrole()\"] = true;\r\n    };\r\n    scaffold.firstHeight = 50; //初期足場がどれだけ浮いているか\r\n    scaffold.defaultWidth = 150; //基本の足場広さ\r\n    scaffold.thickness = 20; //厚さ\r\n    scaffold.scaffoldDistance = 300; //足場同士の上下幅\r\n    return scaffold;\r\n}());\r\n\r\n\n\n//# sourceURL=webpack://my-webpack-project/./src/scaffold/scaffold.ts?");

/***/ }),

/***/ "./src/scaffold/slipScaffold.ts":
/*!**************************************!*\
  !*** ./src/scaffold/slipScaffold.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"slipScaffold\": () => (/* binding */ slipScaffold)\n/* harmony export */ });\n/* harmony import */ var _scaffold__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scaffold */ \"./src/scaffold/scaffold.ts\");\n/* harmony import */ var _other_test__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../other/test */ \"./src/other/test.ts\");\nvar __extends = (undefined && undefined.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n\r\n\r\nvar slipScaffold = /** @class */ (function (_super) {\r\n    __extends(slipScaffold, _super);\r\n    function slipScaffold(_level, _width) {\r\n        if (_width === void 0) { _width = _scaffold__WEBPACK_IMPORTED_MODULE_0__.scaffold.defaultWidth; }\r\n        var _this = _super.call(this, _level, _width) || this;\r\n        _this.friction = 0.01;\r\n        _this.imageName = \"slipScaffold.jpg\";\r\n        _this.createImgElement(_this.imageName); //足場のimg要素を追加する\r\n        _this.setImgElement(); //img要素を取得して初期化する\r\n        _other_test__WEBPACK_IMPORTED_MODULE_1__.testList[\"slipScaffold constructor()\"] = true;\r\n        return _this;\r\n    }\r\n    return slipScaffold;\r\n}(_scaffold__WEBPACK_IMPORTED_MODULE_0__.scaffold));\r\n\r\n\n\n//# sourceURL=webpack://my-webpack-project/./src/scaffold/slipScaffold.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.ts");
/******/ 	
/******/ })()
;